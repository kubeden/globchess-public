import{db as e,collection as t,doc as a,getDoc as s,updateDoc as n,deleteDoc as o,getDocs as l,setDoc as d,addDoc as r,onSnapshot as i,auth as m,query as c,orderBy as g,serverTimestamp as v,limit as h,startAfter as y}from"/assets/js/firebaseInit.js";import{handleStripeCheckout as u}from"/assets/js/payment.js";let lastVisible,currentPage=1,itemsPerPage=10,totalMoves=[],tableBody=document.querySelector("#movesTable tbody"),currentFinishedGamesPage=1,finishedGamesPerPage=4,totalFinishedGames=[];function fetchMoves(){let a=c(t(e,"moves"),g("moveTimestamp","desc"),h(10));l(a).then(e=>{lastVisible=e.docs[e.docs.length-1],totalMoves=e.docs.map(e=>e.data()),renderTablePage(currentPage)})}function fetchNextMoves(){if(!lastVisible){console.log("No more documents to fetch.");return}let a=c(t(e,"moves"),g("moveTimestamp","desc"),y(lastVisible),h(10));l(a).then(e=>{if(e.empty)console.log("No more documents to fetch.");else{lastVisible=e.docs[e.docs.length-1];let t=e.docs.map(e=>e.data());totalMoves=totalMoves.concat(t),renderTablePage(++currentPage),console.log("Fetched next set of moves successfully!")}})}function renderTablePage(e){let t=(e-1)*10,a=totalMoves.slice(t,t+10);tableBody.innerHTML="",0===a.length?tableBody.innerHTML="<tr class='text-center'><td class='px-4 py-4' colspan='4'>No moves found</td></tr>":a.forEach(e=>{tableBody.innerHTML+=createTableRow(e)}),document.getElementById("page").textContent=e}function changePage(e){let t=currentPage+e,a=Math.ceil(totalMoves.length/10);t>0&&t<=a?renderTablePage(currentPage=t):t>a&&fetchNextMoves()}function fetchAllFinishedGames(){l(t(e,"finishedGames")).then(e=>{(totalFinishedGames=e.docs.map(e=>e.data()).sort((e,t)=>t.endedAt-e.endedAt)).forEach((e,t)=>{e.gameNumber=totalFinishedGames.length-t}),renderFinishedGamesPage(currentFinishedGamesPage)})}function renderFinishedGamesPage(e){let t=(e-1)*4,a=totalFinishedGames.slice(t,t+4);console.log(e);let s=document.querySelector(".games-container");s.innerHTML="",a.forEach(e=>{s.appendChild(createGameDiv(e))}),document.getElementById("pageGame").textContent=e,createLastGameDiv()}function createGameDiv(e){console.log(e);let t=document.createElement("div"),a=`gamehistory.html?gameId=${e.gameId}`;return console.log(a),t.className="text-white text-start bg-neutral-800 px-4 pe-8 py-4 rounded-md border border-neutral-700 bg-clip-padding backdrop-filter backdrop-blur-sm bg-opacity-60 transition hover:bg-opacity-100",t.innerHTML=`
        <a href="${a}">
            <h2 class="font-bold">Game #${e.gameNumber}</h2>
            <div class="h-0.5 bg-neutral-700 w-full my-2"></div>
            <p>Ended On: ${new Date(e.endedAt).toLocaleDateString()}</p>
            <p>Finish Move By: <a href="#" class="text-neutral-500">@${e.lastMoveBy}</a></p>
        </a>
        
    `,t}function createLastGameDiv(){let e=totalFinishedGames[0];console.log(e);let t=document.createElement("div"),a=`gamehistory.html?gameId=${e.gameId}`;console.log(a);let s=document.getElementById("lastGameContent");s.innerHTML="",t.className="text-white text-start bg-neutral-800 px-4 pe-8 py-2 rounded-md border border-neutral-700 bg-clip-padding backdrop-filter backdrop-blur-sm bg-opacity-60 transition hover:bg-opacity-100",t.innerHTML=`
        <a href="${a}">
            <h2 class="font-bold">Game #${e.gameNumber}</h2>
            <div class="h-0.5 bg-neutral-700 w-full my-2"></div>
            <p>Ended On: ${new Date(e.endedAt).toLocaleDateString()}</p>
            <p>Finish Move By: <a href="#" class="text-neutral-500">@${e.lastMoveBy}</a></p>
        </a>
        `,s.appendChild(t)}function changeFinishedGamesPage(e){let t=currentFinishedGamesPage+e,a=Math.ceil(totalFinishedGames.length/4);t>0&&t<=a&&renderFinishedGamesPage(currentFinishedGamesPage=t)}function createTableRow(e){return`<tr>
        <td class="  px-4 py-2">${e.move}</td>
        <td class="  px-4 py-2">${e.playerHandle}</td>
        <td class="  px-4 py-2">$${e.amountPaid}</td>
        <td class="  px-4 py-2">${e.moveTimestamp?new Date(e.moveTimestamp).toLocaleString():"N/A"}</td>
    </tr>`}function startBoardTimeCountdown(e){let t=document.getElementById("boardLockedDiv"),a=document.getElementById("boardLockedTime");t.classList.remove("hidden");let s=document.getElementById("myBoard");s.classList.add("board-locked"),setInterval(()=>{let n=new Date().getTime(),o=e-n;o>0?(a.textContent=`Time left: ${Math.floor(o%36e5/6e4)}m ${Math.floor(o%6e4/1e3)}s`,o<=0&&(a.textContent="Time left: 0m 0s",t.classList.add("hidden"),s.classList.remove("board-locked"),clearInterval())):a.textContent="Time left: 0m 0s"},1e3)}document.getElementById("prev").addEventListener("click",()=>changePage(-1)),document.getElementById("next").addEventListener("click",()=>changePage(1)),document.getElementById("prevGame").addEventListener("click",()=>changeFinishedGamesPage(-1)),document.getElementById("nextGame").addEventListener("click",()=>changeFinishedGamesPage(1)),document.querySelectorAll("#paymentModalBody button").forEach(e=>{e.addEventListener("click",async e=>{let t=e.target.getAttribute("data-price-id");await u(t).catch(e=>{console.error("Error processing payment: ",e)}),document.getElementById("paymentModal").classList.add("hidden")})}),document.addEventListener("DOMContentLoaded",function(){document.getElementById("chessboard-loader").style.display="block",document.getElementById("myBoard").style.display="none",m.onAuthStateChanged(function(m){if(m){sessionStorage.removeItem("sessionId");let v=document.getElementById("userTokens"),h=a(e,"users",m.uid);s(h).then(e=>{let t=e.data();v.textContent=t.tokens}).catch(e=>{console.error("Error getting user tokens: ",e)});var y=null,u=new Chess;let f=null,p=document.querySelector("#movesTable tbody");function $(){f||y.position(u.fen())}function M(e){if(e&&e.move){let t=new Date(e.moveTimestamp).toLocaleString();document.getElementById("lastMove").textContent=`Move: ${e.move}`,document.getElementById("lastMoveMadeBy").innerHTML=`Made by: <a href="#" class="text-neutral-500">@${e.playerHandle}</a>`,document.getElementById("lastMoveDate").textContent=`Date: ${t}`,document.getElementById("lastMoveLoader").classList.add("hidden"),document.getElementById("lastMoveContent").classList.remove("hidden")}else document.getElementById("lastMove").textContent="No move yet!",document.getElementById("lastMoveLoader").classList.add("hidden"),document.getElementById("lastMoveContent").classList.remove("hidden")}async function b(){let s=await l(t(e,"moves")),i=s.docs.map(e=>e.data());i.sort((e,t)=>e.moveTimestamp-t.moveTimestamp);let c={fen:u.fen(),moves:i,endedAt:new Date().getTime(),lastMoveBy:m.displayName};try{let g=await r(t(e,"finishedGames"),c);for(let v of(console.log("Finished game saved successfully!",g.id),await n(g,{gameId:g.id}),console.log("Game ID added to the document successfully"),s.docs))await o(v.ref);console.log("Moves cleared successfully!"),u.reset(),await d(a(e,"games","currentGame"),{fen:u.fen(),lastMove:null}),console.log("New game started successfully!"),totalMoves=[],fetchMoves(),y.start()}catch(h){console.error("Error processing game end: ",h)}}function E(){var e="",t="White";"b"===u.turn()&&(t="Black"),u.in_checkmate()||u.in_draw()?(u.in_checkmate()?e="Game over, "+t+" is in checkmate.":u.in_draw()&&(e="Game over, drawn position"),b(),fetchAllFinishedGames()):(e=t+" to move",u.in_check()&&(e+=", "+t+" is in check")),console.log(e)}i(a(e,"games","currentGame"),e=>{if(e.exists()){let t=e.data();u.load(t.fen);let a=u.turn();if(y.orientation("w"===a?"white":"black"),y.position(t.fen),t.lastMove){let s=t.lastMove,n=s.from,o=s.to,l=document.querySelector(`.square-${n}`),d=document.querySelector(`.square-${o}`);l.classList.add("highlight-move"),d.classList.add("highlight-move")}if(console.log(t),t.lockUntil){let r=t.lockUntil,i=new Date().getTime();i<r&&startBoardTimeCountdown(r)}document.getElementById("chessboard-loader").style.display="none",document.getElementById("myBoard").style.display="block"}else console.log("No current game data found!")}),i(c(t(e,"moves"),g("moveTimestamp","desc")),e=>{if(!e.empty){let t=e.docs[0].data();M(t)}p.innerHTML="",fetchMoves()}),document.getElementById("makeAMove").disabled=!0,document.getElementById("makeAMove").addEventListener("click",function(){if(console.log("make a move clicked"),f){let o=a(e,"users",m.uid);s(o).then(l=>{let i=l.data(),c=i.tokens;if(console.log(c),c>=1){let g=a(e,"games","currentGame");s(g).then(s=>{let l=s.data();if(l.lockUntil){let g=new Date().getTime();if(g<l.lockUntil){console.log("Board is already locked!");return}{i.tokens=c-1,n(o,i).then(()=>{console.log("User tokens updated successfully!"),document.getElementById("userTokens").textContent=i.tokens}).catch(e=>{console.error("Error updating user tokens: ",e)}),u.move(f);let v=u.history({verbose:!0}),h=v[v.length-1],p=h.san;console.log("Last move generated: ",h);let $={move:p,playerHandle:m.displayName,moveTimestamp:new Date().getTime()};r(t(e,"moves"),$).then(()=>{console.log("Move data saved successfully!")}).catch(e=>{console.error("Error saving move data: ",e)}),d(a(e,"games","currentGame"),{fen:u.fen(),lastMove:f,lockUntil:B}).then(()=>{console.log("Game state updated successfully!"),console.log("Board locked until: ",B)}).catch(e=>{console.error("Error updating game state: ",e)}),y.position(u.fen()),f=null,document.getElementById("makeAMove").disabled=!0,document.getElementById("resetMove").disabled=!0,document.getElementById("moveMadeModal").classList.remove("hidden"),document.getElementById("moveMadeModal").classList.add("show"),document.getElementById("makeAMove").classList.remove("hover:bg-green-500"),document.getElementById("makeAMove").classList.remove("hover:text-black"),document.getElementById("makeAMove").classList.remove("bg-yellow-600"),document.getElementById("makeAMove").innerHTML="Make A Move",document.getElementById("resetMove").classList.remove("hover:bg-red-500"),document.getElementById("resetMove").classList.remove("hover:text-black"),document.getElementById("resetMove").classList.remove("bg-red-600"),E();let M=encodeURIComponent(`I just made a move on @globchess !

My move: ${p}

Check it out at globchess.com - the world's largest chess game!

#globchess #chess`),b=`https://twitter.com/intent/tweet?text=${M}`;document.getElementById("shareMoveBtn").setAttribute("href",b),console.log("Board is not locked!"),document.getElementById("myBoard").style.pointerEvents="none",document.getElementById("myBoard").style.opacity="0.5",document.getElementById("myBoard").style.cursor="not-allowed";let B=new Date().getTime()+3e5}}}).catch(e=>{console.error("Error getting game data: ",e)})}else console.log("Insufficient tokens!"),document.getElementById("insufficientTokensModal").classList.remove("hidden"),document.getElementById("insufficientTokensModal").classList.add("show")}).catch(e=>{console.error("Error getting user tokens: ",e)})}}),document.getElementById("resetMove").disabled=!0,document.getElementById("resetMove").addEventListener("click",function(){f&&(y.position(u.fen()),f=null,document.getElementById("makeAMove").disabled=!0,document.getElementById("resetMove").disabled=!0,document.getElementById("makeAMove").innerHTML="Make A Move",document.getElementById("makeAMove").classList.remove("hover:bg-green-500"),document.getElementById("makeAMove").classList.remove("hover:text-black"),document.getElementById("makeAMove").classList.remove("bg-yellow-600"),document.getElementById("resetMove").classList.remove("hover:bg-red-500"),document.getElementById("resetMove").classList.remove("hover:text-black"),document.getElementById("resetMove").classList.remove("bg-red-600"))}),y=Chessboard("myBoard",{pieceTheme:"assets/img/chesspieces/wikipedia/{piece}.png",draggable:!0,position:"start",onDragStart:function e(t,a,s,n){if(u.game_over()||"w"===u.turn()&&-1!==a.search(/^b/)||"b"===u.turn()&&-1!==a.search(/^w/))return!1},onDrop:function e(t,a){var s={from:t,to:a,promotion:"q"};if(!u.move(s))return"snapback";u.undo(),f=s,document.getElementById("makeAMove").disabled=!1,document.getElementById("resetMove").disabled=!1,document.getElementById("makeAMove").classList.add("hover:bg-green-500"),document.getElementById("makeAMove").innerHTML="Use 1 Token To Confirm",document.getElementById("makeAMove").classList.add("hover:text-black"),document.getElementById("makeAMove").classList.add("bg-yellow-600"),document.getElementById("resetMove").classList.add("hover:bg-red-500"),document.getElementById("resetMove").classList.add("hover:text-black"),document.getElementById("resetMove").classList.add("bg-red-600")},onSnapEnd:function(){f||y.position(u.fen())}}),document.getElementById("lastMoveLoader").classList.remove("hidden"),document.getElementById("lastMoveContent").classList.add("hidden"),E(),fetchMoves(),fetchAllFinishedGames(),M(null)}else console.log("No user signed in!")})});